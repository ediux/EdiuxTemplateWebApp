@model EdiuxTemplateWebApp.Models.Menus

@{
    ViewBag.Title = "建立選單";
}
@section pagelevelcss{

    }
<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header">
                <i class="icon-list"></i>
                <h3>@ViewBag.Title</h3>
            </div>
            <div class="widget-content">
                <div class="btn-group m-r-5" role="group" aria-label="First group">
                    <a href="@Url.Action("Index")" class="btn btn-primary" title="返回選單列表"><i class="glyphicon glyphicon-arrow-left"></i></a>
                </div>
                @using (Html.BeginForm())
            {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="control-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new
                           {
                               @for = Html.IdFor(model=>model.Name),
                               @class = "control-label"
                           })
                            </div>
                            <div class="col-md-9">
                                <div class="form-group">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.IconCSS, htmlAttributes: new { @for = Html.IdFor(model => model.IconCSS), @class = "control-label" })
                            </div>
                            <div class="col-md-1 text-center">
                                <i class="@Model.IconCSS" id="previewIcon"></i>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group">
                                    @Html.EditorFor(model => model.IconCSS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IconCSS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.AllowAnonymous, htmlAttributes: new {@for=Html.IdFor(model=>model.AllowAnonymous), @class = "control-label" })
                            </div>
                            <div class="col-md-9">
                                <div class="form-group">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(model => model.AllowAnonymous, new { @data_render = "switchery", @data_theme = "default" })
                                    </div>
                                   
                                    @Html.ValidationMessageFor(model => model.AllowAnonymous, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.IsExternalLinks, htmlAttributes: new {@for=Html.IdFor(model=>model.IsExternalLinks), @class = "control-label" })
                               
                            </div>
                            <div class="col-md-9">
                                <div class="form-group">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(model => model.IsExternalLinks, new { @data_render = "switchery", @data_theme = "default" })
                                        @Html.ValidationMessageFor(model => model.IsExternalLinks, "", new { @class = "text-danger" })
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ExternalURL, htmlAttributes: new { @for = Html.IdFor(model => model.ExternalURL), @class = "control-label" })
                            </div>
                            <div class="col-md-9">
                                <div class="form-group">
                                    @Html.EditorFor(model => model.ExternalURL, new { htmlAttributes = new { @class = "form-control ", @disabled = "" } })
                                    @Html.ValidationMessageFor(model => model.ExternalURL, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Order, htmlAttributes: new { @for = Html.IdFor(model => model.Order), @class = "control-label" })
                            </div>
                            <div class="col-md-9">
                                <div class="form-group">
                                    @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ParentMenu, htmlAttributes: new { @for = Html.IdFor(model => model.ParentMenuId), @class = "control-label" })
                            </div>
                            <div class="col-md-9">
                                <div class="form-group">
                                    @Html.DropDownList("ParentMenuId", null, "請選擇...", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ParentMenuId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.System_ControllerActions, htmlAttributes: new { @for = Html.IdFor(model => model.System_ControllerActions), @class = "control-label" })
                            </div>
                            <div class="col-md-9">
                                <div class="form-group">
                                    @Html.DropDownList("System_ControllerActionsId", null, "請選擇...", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.System_ControllerActionsId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>                       
                        <div class="control-group">
                            <div class="text-right">
                                <input type="submit" value="建立" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        function init() {
           // FormSliderSwitcher.init();
            $.ajaxSetup({ cache: false });
            $('#@Html.IdFor(model=>model.IsExternalLinks)').on('change', function () {

                if ($('#@Html.IdFor(model=>model.IsExternalLinks)').prop('checked')) {
                    $('#@Html.IdFor(model => model.ExternalURL)').removeProp('disabled');
                } else {
                    $('#@Html.IdFor(model => model.ExternalURL)').val('');
                    $('#@Html.IdFor(model => model.ExternalURL)').prop('disabled', true);
                }
            });
            $('#@Html.IdFor(model => model.IconCSS)').on('input propertychange paste', function () {
                $('#previewIcon').prop('class', $('#@Html.IdFor(model => model.IconCSS)').val());
            });
            //console.debug('event registered.');
            //autoReload();
        }
        $(document).ready(function () { init(); });
      
    </script>
}
